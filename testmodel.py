# -*- coding: utf-8 -*-
"""testModel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DcJlVbbOgWlWn1EBg_4ohWJIIoE1kKzC
"""

from keras.models import load_model
from keras.utils import load_img, img_to_array
import numpy as np
from keras.optimizers import RMSprop

from google.colab import drive
drive.mount('/content/drive')

model = load_model('/content/drive/My Drive/model.h5')

class_names = ['Balloon vine', 'Coriander', 'Karanda', 'Lemon', 'Mint', 'Mustard', 'Not a matching herb','Oleander', 'Pomegranate']

model.compile(loss='categorical_crossentropy',
              optimizer=RMSprop(learning_rate=0.001),
              metrics=['accuracy'])


# predicting images
image = load_img('/content/drive/My Drive/dataset/Database/Pomegranate/PG-S-001.jpg', target_size=(256, 256))
image = img_to_array(image)
image = np.reshape(image,[1,256,256,3])
model.predict(image)

# Get the predicted output probabilities for the input image
output_probabilities = model.predict(image)
# Get the index of the maximum value in the output array
predicted_class_index = np.argmax(output_probabilities)
# Get the name of the predicted class
predicted_class_name = class_names[predicted_class_index]
# Print the predicted class name
print(predicted_class_name)

# predicting images
image = load_img('/content/drive/My Drive/dataset/Database/Not herbs/dog.jpg', target_size=(256, 256))
image = img_to_array(image)
image = np.reshape(image,[1,256,256,3])
model.predict(image)

# Get the predicted output probabilities for the input image
output_probabilities = model.predict(image)
# Get the index of the maximum value in the output array
predicted_class_index = np.argmax(output_probabilities)
# Get the name of the predicted class
predicted_class_name = class_names[predicted_class_index]
# Print the predicted class name
print(predicted_class_name)